volumes:
  postgres:

networks:
  backend:

services:
  postgres:
    image: postgres:14
    volumes:
      - postgres:/var/lib/postgresql/data:rw
    networks:
      backend:
        aliases:
          - postgres
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "$POSTGRES_DB", "-U", "$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 2

  backend:
    image: public.ecr.aws/u1k0q0r7/back:axel
    build: ./back
    networks:
      backend:
        aliases:
          - backend
    env_file:
      - .env
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "localhost:8080/restaurants"]
      interval: 5s
      timeout: 5s
      retries: 2

  frontend:
    image: public.ecr.aws/u1k0q0r7/front:axel
    build: ./front
    environment:
      - BACKEND_URL_ENV_VAR=http://localhost:8080
    ports:
      - 4200:80
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "localhost:80"]
      interval: 5s
      timeout: 5s
      retries: 2